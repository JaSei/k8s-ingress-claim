########################################################
# k8s-ingress-claim Deployment
########################################################
# k8s-ingress-claim needs to be TLS enabled, please create a cert/key pair and upload to k8s secrets
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    app: k8s-ingress-claim
  name: k8s-ingress-claim
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-ingress-claim
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: k8s-ingress-claim
    spec:
      serviceAccountName: k8s-ingress-claim
      terminationGracePeriodSeconds: 0
      containers:
      - name: k8s-ingress-claim
        resources:
          limits:
            memory: 128Mi
            cpu: 100m
        image: k8s-ingress-claim
        args:
        - --admitAll=false
        - --keyFile=/etc/ssl/certs/k8s-ingress-claim/server-key.pem
        - --certFile=/etc/ssl/certs/k8s-ingress-claim/server.crt
        - --clientAuth=false
        - --logFile=/var/log/k8s-ingress-claim.log
        - --logLevel=info
        - --port=443
        command:
        - /usr/bin/k8s-ingress-claim
        ports:
          - containerPort: 443
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        livenessProbe:
          httpGet:
            path: /status.html
            port: 443
            scheme: HTTPS
          initialDelaySeconds: 15
          timeoutSeconds: 2
        readinessProbe:
          httpGet:
            path: /status.html
            port: 443
            scheme: HTTPS
          initialDelaySeconds: 10
          timeoutSeconds: 2
        volumeMounts:
        - name: tls
          mountPath: "/etc/ssl/certs/k8s-ingress-claim"
          readOnly: true
      volumes:
      - name: tls
        secret:
          defaultMode: 420
          items:
          - key: tls.key
            path: server-key.pem
          - key: tls.crt
            path: server.crt
          secretName: k8s-ingress-claim-tls-certs
